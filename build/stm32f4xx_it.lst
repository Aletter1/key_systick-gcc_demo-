ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB141:
  28              		.file 1 "BSP/Src/stm32f4xx_it.c"
   1:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:BSP/Src/stm32f4xx_it.c **** /**
   3:BSP/Src/stm32f4xx_it.c ****  ******************************************************************************
   4:BSP/Src/stm32f4xx_it.c ****  * @file    stm32f4xx_it.c
   5:BSP/Src/stm32f4xx_it.c ****  * @brief   Interrupt Service Routines.
   6:BSP/Src/stm32f4xx_it.c ****  ******************************************************************************
   7:BSP/Src/stm32f4xx_it.c ****  * @attention
   8:BSP/Src/stm32f4xx_it.c ****  *
   9:BSP/Src/stm32f4xx_it.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:BSP/Src/stm32f4xx_it.c ****  * All rights reserved.</center></h2>
  11:BSP/Src/stm32f4xx_it.c ****  *
  12:BSP/Src/stm32f4xx_it.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:BSP/Src/stm32f4xx_it.c ****  * the "License"; You may not use this file except in compliance with the
  14:BSP/Src/stm32f4xx_it.c ****  * License. You may obtain a copy of the License at:
  15:BSP/Src/stm32f4xx_it.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:BSP/Src/stm32f4xx_it.c ****  *
  17:BSP/Src/stm32f4xx_it.c ****  ******************************************************************************
  18:BSP/Src/stm32f4xx_it.c ****  */
  19:BSP/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:BSP/Src/stm32f4xx_it.c **** 
  21:BSP/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:BSP/Src/stm32f4xx_it.c **** #include "main.h"
  23:BSP/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:BSP/Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:BSP/Src/stm32f4xx_it.c **** #include "task.h"
  26:BSP/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:BSP/Src/stm32f4xx_it.c **** #include "usart.h"
  28:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  29:BSP/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  30:BSP/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 2


  31:BSP/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  32:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  33:BSP/Src/stm32f4xx_it.c **** 
  34:BSP/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  35:BSP/Src/stm32f4xx_it.c **** 
  36:BSP/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  37:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  38:BSP/Src/stm32f4xx_it.c **** 
  39:BSP/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  40:BSP/Src/stm32f4xx_it.c **** 
  41:BSP/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  42:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  43:BSP/Src/stm32f4xx_it.c **** 
  44:BSP/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  45:BSP/Src/stm32f4xx_it.c **** 
  46:BSP/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  47:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  48:BSP/Src/stm32f4xx_it.c **** 
  49:BSP/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  50:BSP/Src/stm32f4xx_it.c **** 
  51:BSP/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  53:BSP/Src/stm32f4xx_it.c **** 
  54:BSP/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  55:BSP/Src/stm32f4xx_it.c **** 
  56:BSP/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  58:BSP/Src/stm32f4xx_it.c **** 
  59:BSP/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  60:BSP/Src/stm32f4xx_it.c **** 
  61:BSP/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  62:BSP/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  63:BSP/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef dma_usart1_tx;
  64:BSP/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef dma_usart1_rx;
  65:BSP/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:BSP/Src/stm32f4xx_it.c **** 
  67:BSP/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:BSP/Src/stm32f4xx_it.c **** 
  69:BSP/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:BSP/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:BSP/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:BSP/Src/stm32f4xx_it.c **** /**
  73:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Non maskable interrupt.
  74:BSP/Src/stm32f4xx_it.c ****  */
  75:BSP/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:BSP/Src/stm32f4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:BSP/Src/stm32f4xx_it.c **** 
  79:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 3


  81:BSP/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 81 3 discriminator 1 view .LVU1
  82:BSP/Src/stm32f4xx_it.c ****   {
  83:BSP/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  81:BSP/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 81 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE141:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB142:
  84:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:BSP/Src/stm32f4xx_it.c **** }
  86:BSP/Src/stm32f4xx_it.c **** 
  87:BSP/Src/stm32f4xx_it.c **** /**
  88:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Hard fault interrupt.
  89:BSP/Src/stm32f4xx_it.c ****  */
  90:BSP/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:BSP/Src/stm32f4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:BSP/Src/stm32f4xx_it.c **** 
  94:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:BSP/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 95 3 discriminator 1 view .LVU5
  96:BSP/Src/stm32f4xx_it.c ****   {
  97:BSP/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:BSP/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:BSP/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 99 3 discriminator 1 view .LVU6
  95:BSP/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 95 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE142:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB143:
 100:BSP/Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 4


 101:BSP/Src/stm32f4xx_it.c **** 
 102:BSP/Src/stm32f4xx_it.c **** /**
 103:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Memory management fault.
 104:BSP/Src/stm32f4xx_it.c ****  */
 105:BSP/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:BSP/Src/stm32f4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:BSP/Src/stm32f4xx_it.c **** 
 109:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:BSP/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 110 3 discriminator 1 view .LVU9
 111:BSP/Src/stm32f4xx_it.c ****   {
 112:BSP/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:BSP/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:BSP/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 114 3 discriminator 1 view .LVU10
 110:BSP/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 110 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE143:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB144:
 115:BSP/Src/stm32f4xx_it.c **** }
 116:BSP/Src/stm32f4xx_it.c **** 
 117:BSP/Src/stm32f4xx_it.c **** /**
 118:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
 119:BSP/Src/stm32f4xx_it.c ****  */
 120:BSP/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:BSP/Src/stm32f4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:BSP/Src/stm32f4xx_it.c **** 
 124:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:BSP/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 125 3 discriminator 1 view .LVU13
 126:BSP/Src/stm32f4xx_it.c ****   {
 127:BSP/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 5


 128:BSP/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:BSP/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 129 3 discriminator 1 view .LVU14
 125:BSP/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 125 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE144:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB145:
 130:BSP/Src/stm32f4xx_it.c **** }
 131:BSP/Src/stm32f4xx_it.c **** 
 132:BSP/Src/stm32f4xx_it.c **** /**
 133:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 134:BSP/Src/stm32f4xx_it.c ****  */
 135:BSP/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:BSP/Src/stm32f4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:BSP/Src/stm32f4xx_it.c **** 
 139:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:BSP/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 140 3 discriminator 1 view .LVU17
 141:BSP/Src/stm32f4xx_it.c ****   {
 142:BSP/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:BSP/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:BSP/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 144 3 discriminator 1 view .LVU18
 140:BSP/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 140 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE145:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB146:
 145:BSP/Src/stm32f4xx_it.c **** }
 146:BSP/Src/stm32f4xx_it.c **** 
 147:BSP/Src/stm32f4xx_it.c **** /**
 148:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles Debug monitor.
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 6


 149:BSP/Src/stm32f4xx_it.c ****  */
 150:BSP/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 151:BSP/Src/stm32f4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 153:BSP/Src/stm32f4xx_it.c **** 
 154:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 155:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 156:BSP/Src/stm32f4xx_it.c **** 
 157:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 158:BSP/Src/stm32f4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE146:
 154              		.section	.text.SysTick_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	SysTick_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	SysTick_Handler:
 162              	.LFB147:
 159:BSP/Src/stm32f4xx_it.c **** 
 160:BSP/Src/stm32f4xx_it.c **** /**
 161:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles System tick timer.
 162:BSP/Src/stm32f4xx_it.c ****  */
 163:BSP/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 164:BSP/Src/stm32f4xx_it.c **** {
 163              		.loc 1 164 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 165:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 166:BSP/Src/stm32f4xx_it.c **** 
 167:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 168:BSP/Src/stm32f4xx_it.c ****   HAL_IncTick();
 172              		.loc 1 168 3 view .LVU23
 173 0002 FFF7FEFF 		bl	HAL_IncTick
 174              	.LVL0:
 169:BSP/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1)
 170:BSP/Src/stm32f4xx_it.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 175              		.loc 1 170 3 view .LVU24
 176              		.loc 1 170 7 is_stmt 0 view .LVU25
 177 0006 FFF7FEFF 		bl	xTaskGetSchedulerState
 178              	.LVL1:
 179              		.loc 1 170 6 view .LVU26
 180 000a 0128     		cmp	r0, #1
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 7


 181 000c 00D1     		bne	.L15
 182              	.L12:
 171:BSP/Src/stm32f4xx_it.c ****   {
 172:BSP/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 173:BSP/Src/stm32f4xx_it.c ****     xPortSysTickHandler();
 174:BSP/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1)
 175:BSP/Src/stm32f4xx_it.c ****   }
 176:BSP/Src/stm32f4xx_it.c **** #endif /* INCLUDE_xTaskGetSchedulerState */
 177:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 178:BSP/Src/stm32f4xx_it.c **** 
 179:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 180:BSP/Src/stm32f4xx_it.c **** }
 183              		.loc 1 180 1 view .LVU27
 184 000e 08BD     		pop	{r3, pc}
 185              	.L15:
 173:BSP/Src/stm32f4xx_it.c **** #if (INCLUDE_xTaskGetSchedulerState == 1)
 186              		.loc 1 173 5 is_stmt 1 view .LVU28
 187 0010 FFF7FEFF 		bl	xPortSysTickHandler
 188              	.LVL2:
 189              		.loc 1 180 1 is_stmt 0 view .LVU29
 190 0014 FBE7     		b	.L12
 191              		.cfi_endproc
 192              	.LFE147:
 194              		.section	.text.USART1_IRQHandler,"ax",%progbits
 195              		.align	1
 196              		.global	USART1_IRQHandler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	USART1_IRQHandler:
 202              	.LFB148:
 181:BSP/Src/stm32f4xx_it.c **** 
 182:BSP/Src/stm32f4xx_it.c **** /******************************************************************************/
 183:BSP/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 184:BSP/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 185:BSP/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 186:BSP/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 187:BSP/Src/stm32f4xx_it.c **** /******************************************************************************/
 188:BSP/Src/stm32f4xx_it.c **** 
 189:BSP/Src/stm32f4xx_it.c **** /**
 190:BSP/Src/stm32f4xx_it.c ****  * @brief This function handles USART1 global interrupt.
 191:BSP/Src/stm32f4xx_it.c ****  */
 192:BSP/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 193:BSP/Src/stm32f4xx_it.c **** {
 203              		.loc 1 193 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI1:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
 194:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 195:BSP/Src/stm32f4xx_it.c **** 
 196:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 197:BSP/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 8


 212              		.loc 1 197 3 view .LVU31
 213 0002 0248     		ldr	r0, .L18
 214 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 215              	.LVL3:
 198:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 199:BSP/Src/stm32f4xx_it.c **** 
 200:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 201:BSP/Src/stm32f4xx_it.c **** }
 216              		.loc 1 201 1 is_stmt 0 view .LVU32
 217 0008 08BD     		pop	{r3, pc}
 218              	.L19:
 219 000a 00BF     		.align	2
 220              	.L18:
 221 000c 00000000 		.word	huart1
 222              		.cfi_endproc
 223              	.LFE148:
 225              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	DMA2_Stream7_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	DMA2_Stream7_IRQHandler:
 233              	.LFB149:
 202:BSP/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 203:BSP/Src/stm32f4xx_it.c **** {
 234              		.loc 1 203 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 204:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 205:BSP/Src/stm32f4xx_it.c **** 
 206:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 207:BSP/Src/stm32f4xx_it.c **** #if uart1_tx_dma
 208:BSP/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&dma_usart1_tx);
 243              		.loc 1 208 3 view .LVU34
 244 0002 0248     		ldr	r0, .L22
 245 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 246              	.LVL4:
 209:BSP/Src/stm32f4xx_it.c **** #endif
 210:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 211:BSP/Src/stm32f4xx_it.c **** 
 212:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 213:BSP/Src/stm32f4xx_it.c **** }
 247              		.loc 1 213 1 is_stmt 0 view .LVU35
 248 0008 08BD     		pop	{r3, pc}
 249              	.L23:
 250 000a 00BF     		.align	2
 251              	.L22:
 252 000c 00000000 		.word	dma_usart1_tx
 253              		.cfi_endproc
 254              	.LFE149:
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 9


 256              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 257              		.align	1
 258              		.global	DMA2_Stream2_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	DMA2_Stream2_IRQHandler:
 264              	.LFB150:
 214:BSP/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 215:BSP/Src/stm32f4xx_it.c **** {
 265              		.loc 1 215 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 216:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 217:BSP/Src/stm32f4xx_it.c **** 
 218:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 219:BSP/Src/stm32f4xx_it.c **** #if uart1_rx_dma
 220:BSP/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&dma_usart1_rx);
 274              		.loc 1 220 3 view .LVU37
 275 0002 0248     		ldr	r0, .L26
 276 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 277              	.LVL5:
 221:BSP/Src/stm32f4xx_it.c **** #endif
 222:BSP/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 223:BSP/Src/stm32f4xx_it.c **** 
 224:BSP/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 225:BSP/Src/stm32f4xx_it.c **** }
 278              		.loc 1 225 1 is_stmt 0 view .LVU38
 279 0008 08BD     		pop	{r3, pc}
 280              	.L27:
 281 000a 00BF     		.align	2
 282              	.L26:
 283 000c 00000000 		.word	dma_usart1_rx
 284              		.cfi_endproc
 285              	.LFE150:
 287              		.text
 288              	.Letext0:
 289              		.file 2 "d:\\program files (x86)\\gnutools\\gcc-arm-none-eabi-win32\\arm-none-eabi\\include\\machi
 290              		.file 3 "d:\\program files (x86)\\gnutools\\gcc-arm-none-eabi-win32\\arm-none-eabi\\include\\sys\\
 291              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 292              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 293              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 294              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 295              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 296              		.file 9 "BSP/Inc/usart.h"
 297              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 298              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 299              		.file 12 "BSP/Inc/FreeRTOSConfig.h"
ARM GAS  C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:20     .text.NMI_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:136    .text.DebugMon_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:155    .text.SysTick_Handler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:161    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:195    .text.USART1_IRQHandler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:201    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:221    .text.USART1_IRQHandler:0000000c $d
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:226    .text.DMA2_Stream7_IRQHandler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:232    .text.DMA2_Stream7_IRQHandler:00000000 DMA2_Stream7_IRQHandler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:252    .text.DMA2_Stream7_IRQHandler:0000000c $d
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:257    .text.DMA2_Stream2_IRQHandler:00000000 $t
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:263    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
C:\Users\Aletter1\AppData\Local\Temp\ccnL8NLu.s:283    .text.DMA2_Stream2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
xTaskGetSchedulerState
xPortSysTickHandler
HAL_UART_IRQHandler
huart1
HAL_DMA_IRQHandler
dma_usart1_tx
dma_usart1_rx
